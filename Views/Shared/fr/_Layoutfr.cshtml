<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<title>Lite Scrum</title>
<meta name="description" content="Lite Scrum vous permet de gagner du temps en planifiant, en préparant et en effectuant vos tâches quotidiennes, ce qui augmente l'hyperproductivité.">
<meta name="keywords" content="scrum, sprint, velocity, équipe, individuel, logiciel, planification, tâches, to do , in progress, done, product backlog, epic, sprint backlog, sprint planning, velocity, articles, daily standup">
<meta name="author" content="Jinan Kordab">
<!-- Favicons -->
<link href="~/Images/logo8C.png" rel="icon">
<link href="~/Images/logo8C.png" rel="logo-Liteweight-scrum-sprint">
@Scripts.Render("~/bundles/modernizr")
<script src="~/Scripts/jquery-1.12.1.min.js"></script>
<script src="~/Scripts/jquery-ui.js"></script>
<script src="~/Scripts/popper.min.js"></script>
<link href="~/Styles/bootstrap.min.css" rel="stylesheet" id="bootstrap-css" />
<script src="~/Scripts/bootstrap.min.js"></script>
<link href="~/Styles/Montserrat.css" rel="stylesheet" type='text/css' />
<link href="~/Styles/dataTables.bootstrap.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery.dataTables.min.js"></script>
<script src="~/Scripts/dataTables.bootstrap.min.js"></script>
<link href="~/Styles/bootstrap-select.min.css" rel="stylesheet" />
<script src="~/Scripts/bootstrap-select.min.js"></script>
<style type="text/css">
    html, body {
        font-family: 'Montserrat', sans-serif;
        border: 5px solid lightgrey;
        min-height: 100%;
    }

    .close {
        font-size: 40px;
    }

    .modal.fade .modal-dialog {
        -moz-transition: none !important;
        -o-transition: none !important;
        -webkit-transition: none !important;
        transition: none !important;
        -moz-transform: none !important;
        -ms-transform: none !important;
        -o-transform: none !important;
        -webkit-transform: none !important;
        transform: none !important;
    }

    .navbar-brand {
        float: left;
        height: 50px;
        padding: 0px 0px;
        font-size: 18px;
        line-height: 20px;
    }

    .bootstrap-select:not([class*=col-]):not([class*=form-control]):not(.input-group-btn) {
        width: 100%;
    }
</style>
<script type="text/javascript">
		$(document).ready(function () {
			$(".modal").on("shown.bs.modal", centerModal);
			$(window).on("resize", function () {
				$(".modal:visible").each(centerModal);
			});
			if ($.fn.DataTable.isDataTable('#tblTeams')) {
				$('#tblTeams').DataTable().ajax.reload();
			}
			else {
				bindDatatableTeams();
			}
            $("#FRlanguage").click(function () {
                $("#lAction").val(this.name);
                $("#cultureform").submit();
            });
            $("#ENlanguage").click(function () {
                $("#lAction").val(this.name);
                $("#cultureform").submit();
            });
            $.ajax({
                type: "GET",
                url: "/Sprint/GetAllPeople",
                data: "{}",
                success: function (data) {
                    var s = '<option value="-1">Please select a person</option>';
                    for (var i = 0; i < data.length; i++) {
                        s += '<option value="' + data[i].USERID + '">' + data[i].FIRSTNAME + ' ' + data[i].LASTNAME + '</option>';
                    }
                    $("#PeopleSelect").html(s);
                    $('#PeopleSelect').addClass("selectpicker").selectpicker('refresh');
                }
            });
            $('#PeopleSelect').selectpicker('refresh');
            $("#changeOwnerFrmChangeOwner").submit(function () {
                var p = $("#PeopleSelect").val();
                if (p == '-1') {
                    $(".bootstrap-select:not([class*=col-]):not([class*=form-control]):not(.input-group-btn)").css({ "border": "2px solid red" });
                    return false;
                    event.preventDefault();
                }
            });
			$.ajax({
				type: "GET",
				url: "/Home/GetAllClientsListForNewTask",
				data: "{}",
				success: function (data) {
					var s = '<option value="0">Please select a client</option>';
					for (var i = 0; i < data.length; i++) {
						s += '<option value="' + data[i].CLIENTID + '">' + data[i].CLIENTNAME + '</option>';
					}
					$("#ClientSelect").html(s);
					$('#ClientSelect').addClass("selectpicker").selectpicker('refresh');
				}
			});
			$("#ClientSelect").change(function () {
				var selectedClient = $(this).children("option:selected").val();
				$.ajax({
					type: "GET",
					url: "/Home/GetAllEpicsListForNewTask",
					data: { ClientId: selectedClient},
					success: function (data) {
						var s = '<option value="0">Please select an epic</option>';
						for (var i = 0; i < data.length; i++) {
							s += '<option value="' + data[i].EPICID + '">' + data[i].EPICTITLE + '</option>';
						}
						$("#EpicSelect").html(s);
						$('#EpicSelect').addClass("selectpicker").selectpicker('refresh');
					}
				});
			});
			$("#EpicSelect").change(function () {
				var selectedEpic = $(this).children("option:selected").val();
				$.ajax({
					type: "GET",
					url: "/Home/GetAllPBsForAnEpic",
					data: { EpicId: selectedEpic },
					success: function (data) {
						var s = '<option value="0">Please select product backlog</option>';
						for (var i = 0; i < data.length; i++) {
							s += '<option value="' + data[i].ITEMID + '">' + data[i].ITEMTITLE + '</option>';
						}
						$("#PBelect").html(s);
						$('#PBelect').addClass("selectpicker").selectpicker('refresh');
					}
				});
			});
            $.ajax({
                type: "GET",
                url: "/Home/GetAllTeamsPerUser",
                data: "{}",
                success: function (data) {
                    var s = '<option value="-1">Please pick a team</option>';
                    for (var i = 0; i < data.length; i++) {
                        s += '<option value="' + data[i].TEAMID + '">' + data[i].TEAMNAME + '</option>';
                    }
                    $("#TeamSelect").html(s);
                    $('#TeamSelect').addClass("selectpicker").selectpicker('refresh');
                }
			});
            SetDateForNewTeamMember()
			$('#TeamSelect').selectpicker('refresh');
            $("#newItem").submit(function () {
				var p = $("#ClientSelect").val();
				var e = $("#EpicSelect").val();
				var pb = $("#PBelect").val();
                if (p == '0' | e == "0" | pb == "0") {
                    $(".bootstrap-select:not([class*=col-]):not([class*=form-control]):not(.input-group-btn)").css({ "border": "2px solid red" });
                    return false;
                    event.preventDefault();
                }
            });
        });
		function FillEpicsSelect(clientID) {
		alert(clientID);
	}
		function bindDatatableTeams() {
		datatable = $('#tblTeams')
			.DataTable({
				"sAjaxSource": "/Home/GetPeople",
				"bServerSide": true,
				"bProcessing": true,
				"bSearchable": true,
				"order": [[1, 'asc']],
				"language": {
					"emptyTable": "No record found.",
					"processing":
						'<i class="fa fa-spinner fa-spin fa-3x fa-fw" style="color:#2a2b2b;"></i><span class="sr-only">Loading...</span> '
				},
				"columns": [
					{
						"data": "FIRSTNAME",
						"autoWidth": true,
						"searchable": true
					},
					{
						"data": "LASTNAME",
						"autoWidth": true,
						"searchable": true
					},
					{
						"data": "EMAIL",
						"autoWidth": true,
						"searchable": true
					},
					{
						"data": "USERID",
						"render": function (data, type, full, meta) {
                            return '<button style="width:100%" id="' + full.USERID + '|' + full.FIRSTNAME + '|' + full.LASTNAME + '|' + full.EMAIL + '" type="button" class="btn btn-info" value="' + full.USERID + '|' + full.FIRSTNAME + '|' + full.LASTNAME + '|' + full.EMAIL + '" onclick="AddPersonToTeam(this);">Ajouter</button>';
						}
					},
				],
			});
	}
		function centerModal() {
			//var modalDialog = $(this).find(".modal-dialog");
			//modalDialog.css("margin-top", Math.max(0, ($(window).height() - modalDialog.height()) / 2));
			//modalDialog.attr('class', 'modal-dialog swing  animated');
		}
		function showDetails() {
			alert("Details");
		}
		function showMenu() { alert("Menu"); }
		function SetDateForNewItem() {
			var today = new Date();
			var month = (today.getMonth() + 1).toString().length == 1 ? ('0' + (today.getMonth() + 1)) : ((today.getMonth() + 1));
			var day = today.getDate().toString().length == 1 ? ('0' + today.getDate()) : (today.getDate());
			var date = today.getFullYear() + '-' + month + '-' + day;
			var hours = today.getHours().toString().length == 1 ? ('0' + today.getHours()) : (today.getHours());
			var minutes = today.getMinutes().toString().length == 1 ? ('0' + today.getMinutes()) : (today.getMinutes());
			var seconds = today.getSeconds().toString().length == 1 ? ('0' + today.getSeconds()) : (today.getSeconds());
			var time = hours + ":" + minutes + ":" + seconds;
			var dateTime = date + ' ' + time;
			$("#itemCreationDate").val(dateTime);
	}
		function SetDateForNewTeamMember() {
        var today = new Date();
        var month = (today.getMonth() + 1).toString().length == 1 ? ('0' + (today.getMonth() + 1)) : ((today.getMonth() + 1));
        var day = today.getDate().toString().length == 1 ? ('0' + today.getDate()) : (today.getDate());
        var date = today.getFullYear() + '-' + month + '-' + day;
        var hours = today.getHours().toString().length == 1 ? ('0' + today.getHours()) : (today.getHours());
        var minutes = today.getMinutes().toString().length == 1 ? ('0' + today.getMinutes()) : (today.getMinutes());
        var seconds = today.getSeconds().toString().length == 1 ? ('0' + today.getSeconds()) : (today.getSeconds());
        var time = hours + ":" + minutes + ":" + seconds;
        var dateTime = date + ' ' + time;
        $("#registrationDate").val(dateTime);
    }
		function getFormatteDate(today) {
			var tday = new Date(today);
            var month = (tday.getMonth() + 1).toString().length == 1 ? ('0' + (tday.getMonth() + 1)) : ((tday.getMonth() + 1));
            var day = tday.getDate().toString().length == 1 ? ('0' + tday.getDate()) : (tday.getDate());
            var date = tday.getFullYear() + '-' + month + '-' + day;
            var hours = tday.getHours().toString().length == 1 ? ('0' + tday.getHours()) : (tday.getHours());
            var minutes = tday.getMinutes().toString().length == 1 ? ('0' + tday.getMinutes()) : (tday.getMinutes());
            var seconds = tday.getSeconds().toString().length == 1 ? ('0' + tday.getSeconds()) : (tday.getSeconds());
			var time = hours + ":" + minutes + ":" + seconds;
			var dateTime = date + ' ' + time;
			return dateTime;
		}
		function moveToInProgress(ItemId) {
			$.ajax({
				url: "/Home/MoveToInProgress",
				type: "POST",
				data: {
					ItemId: ItemId
				},
				success: function (data) {
					if (data == "true") {
						location.reload();
					}
				}
				});
		}
		function moveToToDo(ItemId) {
			$.ajax({
				url: "/Home/MoveToToDo",
				type: "POST",
				data: {
					ItemId: ItemId
				},
				success: function (data) {
					if (data == "true") {
						location.reload();
					}
				}
			});
	}
		function moveToQA(ItemId) {
        $.ajax({
            url: "/Home/MoveToToQA",
            type: "POST",
            data: {
                ItemId: ItemId
            },
            success: function (data) {
                if (data == "true") {
                    location.reload();
                }
            }
        });
	}
		function ChangeOwner(itemID) {
		$("#itemIdToChangeOwner").val(itemID);
        $('#changeOwnerModal').modal('show');
    }
		function moveToQA(ItemId) {
        $.ajax({
            url: "/Home/MoveToToQA",
            type: "POST",
            data: {
                ItemId: ItemId
            },
            success: function (data) {
                if (data == "true") {
                    location.reload();
                }
            }
        });
    }
		function moveToDone(ItemId) {
			$.ajax({
				url: "/Home/MoveToDone",
				type: "POST",
				data: {
					ItemId: ItemId
				},
				success: function (data) {
					if (data == "true") {
						location.reload();
					}
				}
			});
		}
		function DeleteItem(ItemId)
		{
			$.ajax({
				url: "/Home/DeleteItem",
				type: "POST",
				data: {
					ItemId: ItemId
				},
				success: function (data) {
					if (data == "true") {
						location.reload();
					}
				}
			});
		}
		function deleteAttachment(ItemId, itemdetailsid)
		{
			$.ajax({
				url: "/Home/DeleteAttachment",
				type: "POST",
				data: {
					ItemId: ItemId
				},
				success: function (data) {
					if (data == "true") {
						$('#dAttachmentDetails').empty();
						DisplayItemDetails(itemdetailsid);
					}
				}
			});
		}
		function ResetNewItem() {
			$("#attachments").val(null);
			$('#newItemModal').modal('show');
		}
		function ResetFileUpload(id) {
			$("#dattachments").val(null);
			$('#itemDetailsModal').modal('show');
		}
		function downloadAttachment(attId)
		{
			window.location.href = '@Url.Action("GetFile", "Home")?attId=' + attId;
		}
		function DisplayItemDetails(ItemId)
		{
			$.ajax({
				url: "/Home/GetItemDetails",
				type: "POST",
				data: {
					ItemId: ItemId
				},
				success: function (data) {
					var date = data.CREATIONDATE;
					var parsedDate = new Date(parseInt(date.substr(6)));
					var newDate = new Date(parsedDate);
					var itemid = data.ITEMID;
					var itemtitle = data.ITEMTITLE;
					var crationdate = getFormatteDate(newDate);
					var attachmentcount = data.ATTACHMENTSCOUNT;
					var linkcount = data.LINKCOUNT;
					var itemnotes = data.ITEMNOTES;
					var itemlocation = data.ITEMLOCATION;
					var linkone = data.LINKONE;
					var linktwo = data.LINKTWO;
					var linkthree = data.LINKTHREE;
					$('#existingItemIdToUpdate').val(ItemId);
					$('#ditemTitle').val(itemtitle);
					$('#ditemCreationDate').val(crationdate);
					$('#ditemdescription').val(itemnotes.replace(/<br>/g, '\r\n'));
					$('#dlinkOne').val(linkone);
					$('#dlinkTwo').val(linktwo);
					$('#dlinkThree').val(linkthree);
					$('#detailsResetButton').val(ItemId);
					$('#dAttachmentDetails').empty();
					var allAtt = data.AttList;
					for (var attItem in allAtt) {
						$('#dAttachmentDetails').append('<li class="list-group-item d-flex justify-content-between align-items-center">' + allAtt[attItem].ATTACHMENTNAME + '<a class="badge badge-primary badge-pill"  onclick="downloadAttachment(' + allAtt[attItem].ATTITEMID +')">download</a><a class="badge badge-primary badge-pill" id="li"' + allAtt[attItem].ATTITEMID + '"_d" onclick="deleteAttachment(' + allAtt[attItem].ATTITEMID + ',' + ItemId+')">delete</a></li>');
					}
					$('#itemDetailsModal').modal('show');
				}
			});
		}
		function showModal2() {
			$('#quotesModal').modal('show');
		};
		function CreateNewteam() {
			$('#newTeamModal').modal('show');
	}
		function CreateNewMember() {
        $('#newMemberModal').modal('show');
    }
		function AddPersonToTeam(e) {
		var res = e.value.split("|");
		if ($("#selectedTeamMembers > tr").length == 0) {
            $("#selectedTeamMembers").append("<tr><td style=\"display:none\">" + res[0] + "</td><td>" + res[1] + "</td><td>" + res[2] + "</td><td>" + res[3] + "</td><td><button style=\"width: 100 %\" value=\"" + e.id + "\" type=\"button\" class=\"btn btn-info\"  onclick=\"RemoveSelectedTeamMember(this);\">Supprimer</button></td></tr>");
		}
		else {
			var i = 0;
			var t = document.getElementById('selectedTeamMembers');
			var alreadyAdded = false;
			$("#selectedTeamMembers tr").each(function () {
				var NEW_F_NAME = res[1];
				var NEW_L_NAME = res[2];
				var NEW_EMAIL = res[3];
				var FIRSTNAME = $(t.rows[i].cells[1]).text();
				var LASTNAME = $(t.rows[i].cells[2]).text();
				var EMAIL = $(t.rows[i].cells[3]).text();
				if (NEW_F_NAME == FIRSTNAME && NEW_L_NAME == LASTNAME && NEW_EMAIL == EMAIL) {
					alreadyAdded = true;
				}
				i++;
			});
			if (alreadyAdded) {
				alert("You already selected this person !");
			}
			else {
                $("#selectedTeamMembers").append("<tr><td style=\"display:none\">" + res[0] + "</td><td>" + res[1] + "</td><td>" + res[2] + "</td><td>" + res[3] + "</td><td><button style=\"width: 100 %\" value=\"" + e.id + "\" type=\"button\" class=\"btn btn-info\"  onclick=\"RemoveSelectedTeamMember(this);\">Supprimer</button></td></tr>");
			}
		}
		if ($("#selectedTeamMembers > tr").length > 0) {
			$("#btnCreateTeam").prop("disabled", false);
		}
	}
		function RemoveSelectedTeamMember(e) {
		if (document.getElementById("" + e.value + "") != null) {
			document.getElementById("" + e.value + "").disabled = false;
		}
		$(e).closest("tr").remove();
		if ($("#selectedTeamMembers > tr").length > 0) {
			$("#btnCreateTeam").prop("disabled", false);
		}
		else {
			$("#btnCreateTeam").prop("disabled", true);
		}
	}
		function Create2DArray(rows) {
		var arr = [];
		for (var i = 0; i < rows; i++) {
			arr[i] = [];
		}
		return arr;
	}
		function CreateTeamWithMembers(e)
	{
		if ($("#teamName").val() == "") {
			alert("Please enter team name !");
			return false;
		}
		else {
			var i = 0;
			var t = document.getElementById('selectedTeamMembers');
			var numeric = Create2DArray($("#selectedTeamMembers > tr").length);
			$("#selectedTeamMembers > tr").each(function () {
				var PERSONSID = $(t.rows[i].cells[0]).text();
				var TEAMNAME = $("#teamName").val();
				var FIRSTNAME = $(t.rows[i].cells[1]).text();
				var LASTNAME = $(t.rows[i].cells[2]).text();
				var EMAIL = $(t.rows[i].cells[3]).text();
				numeric[i][0] = TEAMNAME;
				numeric[i][1] = PERSONSID;
				i++;
				debugger;
			});
			$.ajax({
				url: "/Home/AddMembersToTeam",
				type: "POST",
				data: {
					arrayofpersons: numeric
				},
				success: function (data) {
					if (data == "True") {
						location.reload();
					}
				}
			});
		}
	}
		function setClientSelected(c) {
		$("#clientSelected").val(c);
	}
		function setEpicSelected(e) {
        $("#clientSelected").val(c);
	}
		function DisplayUsersDetails() {
        $.ajax({
            url: "/Home/GetUserDetails",
            type: "POST",
            data: "{}",
            success: function (data) {
                var userID = data.USERID;
                var userNickName = data.NICKNAME;
                var userFirstName = data.FIRSTNAME;
                var userLastName = data.LASTNAME;
				var userEmail = data.EMAIL;
                var date = data.REGISTRATIONDATE;
                var parsedDate = new Date(parseInt(date.substr(6)));
                var newDate = new Date(parsedDate);
                var registrationDate = getFormatteDate(newDate);
				var isTeamCreator = data.ISTEAMCREATOR;
                var imageClient = data.ClientImagePath;
                $('#uhyujkzsaa').val(userID);
                $('#dUserNickname').val(userNickName);
                $('#uFirstName').val(userFirstName);
                $('#userLastName').val(userLastName);
				$('#userEmail').val(userEmail);
                $('#userRegistrationDate').val(registrationDate);
                $("#usersPhoto").attr("src", imageClient);
                $('#UserDetailsModal').modal('show');
            }
        });
	}
		function UserDetails() {
        DisplayUsersDetails();
    }
</script>
<nav class="navbar navbar-default">
    <div class="container-fluid">
        <div class="navbar-header">
            <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" aria-expanded="false" aria-controls="navbar">
                <span class="sr-only">Basculer la navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <a class="navbar-brand" href="#"><img class="img-rounded" src="~/Images/logo8C.png" width="48" height="48" /></a>
        </div>
        <div id="navbar" class="navbar-collapse collapse">
            <ul class="nav navbar-nav">
                <li class="active"><a href="/Home/Index">Accueil</a></li>
                <li class="active"><a href="#" onclick="UserDetails();" id="mMe">Moi</a><input type="hidden" id="meId" /></li>
                <li><a href="#" onclick="showModal2();">Citations</a></li>
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">Équipe <span class="caret"></span></a>
                    <ul class="dropdown-menu">
                        <li><a href="#" onclick="CreateNewteam();" id="menuItemCreateNewTeam">Créer une nouvelle équipe</a></li>
                        <li><a href="#" onclick="CreateNewMember();" id="menuItemCreateNewMember">Créer un nouveau membre</a></li>
                    </ul>
                </li>
                <li><a href="/Client/Index">Les clients</a></li>
            </ul>
            <form id="logoutform" action="/Login/Logout" enctype="multipart/form-data" method="post">
                <ul class="nav navbar-nav navbar-right">
                    <li><a href="#" style="color:indianred" name="fr" id="FRlanguage" value="fr">FR</a></li>
                    <li><a href="#" style="color:indianred" name="en" id="ENlanguage" value="en">EN</a></li>
                    <li><a href="/Wiki/Index">Wiki</a></li>
                    <li><a href="#" onclick="this.closest('form').submit();">Déconnexion</a></li>
                </ul>
            </form>
            <form id="cultureform" action="/Home/Culture" enctype="multipart/form-data" method="post">
                <input type="hidden" name="lAction" id="lAction" />
            </form>
        </div>
    </div>
</nav>
@RenderBody()

